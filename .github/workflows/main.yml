name: CI/CD Docker # 아무렇게나 지으셔도 됩니다. Action의 역할에 맞는 이름을 지어주시면 됩니다.

on:
  push:
    branches: [master] # master branch 에 push 될 때마다 라는 뜻입니다.

env:
  DOCKER_IMAGE: ghcr.io/${{ github.actor }}/t-our-data-client # ${{}} 은 변수입니다. 본인의 user-name 이 들어갑니다. 
  VERSION: ${{ github.sha }} # 정확히 뭔 값인지 모르는데 매번 다른 값이 들어가는 걸로 이해했습니다.
  NAME: tour_cicd # 제가 임의로 지은 환경변수 이름입니다. 어디서 사용되는지는 모르겠습니다...

jobs:
  build: # build 라는 작업을 할거고
    name: Build # 이름은 Build 야
    runs-on: ubuntu-latest # 우분투 최신 버전에서 돌아가게 해줘
    steps: # 다음과 같은 순서로 작업해줘
      - name: Check out source code
        uses: actions/checkout@v2 # 내 repo 에서 코드 다 가져와
      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }} # runner 설정에서 읽어들일거에요.
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.아까적은_Seceret_이름 }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}

  deploy:
    needs: build
    name: Deploy
    runs-on: self-hosted # 이렇게 적어줘야 되더라구요
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.아까적은_Seceret_이름 }}
      - name: Docker run
        run: |
          docker ps -q --filter "name=t-our-data-client" | grep -q . && docker stop t-our-data-client && docker rm -fv t-our-data-client
          docker run -itd -p 8081:8081 --name data-client --restart always ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}
